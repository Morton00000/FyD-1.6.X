// import groovy.io.FileType

// If anyone knows a better way to do this please let me know or fix it for me
FileTree all = fileTree(dir: 'Vanilla_Minecraft') + fileTree(dir: 'MCPatcher-Optifine') + fileTree(dir: 'Advanced_Genetics') + fileTree(dir: 'Agriculture') + fileTree(dir: 'Applied_Energistics') + fileTree(dir: 'Aquaculture') + fileTree(dir: 'Arcane_Scrolls') + fileTree(dir: 'Archimedes_Ships') + fileTree(dir: 'Aroma_1997_Core') + fileTree(dir: 'ArsMagica_2') + fileTree(dir: 'Artifice') + fileTree(dir: 'Backpack') + fileTree(dir: 'Barrels') + fileTree(dir: 'BC4') + fileTree(dir: 'BC4-Additional_Objects') + fileTree(dir: 'BC4-Additional_Pipes') + fileTree(dir: 'BC4-Logistics_Pipes') + fileTree(dir: 'BC4-Teleport_Pipes') + fileTree(dir: 'Batter_Chests') + fileTree(dir: 'BetterGrassAndLeavesMod') + fileTree(dir: 'Biblio_Craft') + fileTree(dir: 'Biblio_WoodsBOP') + fileTree(dir: 'Biblio_WoodsForestry') + fileTree(dir: 'Biblio_WoodsNatura') + fileTree(dir: 'BiomesOPlenty') + fileTree(dir: 'Blood_Magic') + fileTree(dir: 'CB-Chicken_Chunks') + fileTree(dir: 'CB-Ender_Storage') + fileTree(dir: 'CB-Translocator') + fileTree(dir: 'CB-WRCBE') + fileTree(dir: 'CoFH-Core') + fileTree(dir: 'CoFH-Thermal_Expansion') + fileTree(dir: 'Computer_Craft') + fileTree(dir: 'Craftable_Horse_Armor') + fileTree(dir: 'DartCraft') + fileTree(dir: 'Den_Pipes') + fileTree(dir: 'Den_PipesEmerald') + fileTree(dir: 'Dynamic_Tanks_2') + fileTree(dir: 'Electrodynamics') + fileTree(dir: 'Emasher_Resource') + fileTree(dir: 'Enchanting_Plus') + fileTree(dir: 'EnderIO') + fileTree(dir: 'Engineers_Toolbox') + fileTree(dir: 'Enhanced_Portals') + fileTree(dir: 'ExtrabiomesXL') + fileTree(dir: 'ExtraCells') + fileTree(dir: 'ExtraTiC') + fileTree(dir: 'ExtraUtils') + fileTree(dir: 'Factorization') + fileTree(dir: 'Farlanders') + fileTree(dir: 'Flatsigns') + fileTree(dir: 'Forestry') + fileTree(dir: 'Forestry-Binnie_Mods') + fileTree(dir: 'Forestry-Magic_Bees') + fileTree(dir: 'Forestry-Plugins') + fileTree(dir: 'Forge_Multipart') + fileTree(dir: 'Furniture_Mod') + fileTree(dir: 'Ganys_End') + fileTree(dir: 'Ganys_Nether') + fileTree(dir: 'Ganys_Surface') + fileTree(dir: 'GasCraft') + fileTree(dir: 'Hopper_Ducts_Mod') + fileTree(dir: 'IC2') + fileTree(dir: 'IC2-Advanced_Machines(immibis)') + fileTree(dir: 'IC2-Advanced_Power_Management') + fileTree(dir: 'IC2-Advanced_Solar_Panels') + fileTree(dir: 'IC2-Charge_Pads') + fileTree(dir: 'IC2-Compact_Solars') + fileTree(dir: 'IC2-Gravi_Suite') + fileTree(dir: 'IC2-GregTech') + fileTree(dir: 'IC2-MFFS') + fileTree(dir: 'IC2-Nuclear_Control') + fileTree(dir: 'iChun-GravityGun') + fileTree(dir: 'iChun-Hats') + fileTree(dir: 'iChun-Morph') + fileTree(dir: 'iChun-PortalGun') + fileTree(dir: 'Immibis-Core') + fileTree(dir: 'Immibis-Microblocks') + fileTree(dir: 'Immibis-Peripherals') + fileTree(dir: 'Iron_Chest') + fileTree(dir: 'JABBA') + fileTree(dir: 'Magical_Crops') + fileTree(dir: 'Metallurgy') + fileTree(dir: 'Misc_Peripherals') + fileTree(dir: 'MPS') + fileTree(dir: 'Mystcraft') + fileTree(dir: 'Natura') + fileTree(dir: 'NEI') + fileTree(dir: 'NEIAddons') + fileTree(dir: 'NEIPlugins') + fileTree(dir: 'Open_Blocks') + fileTree(dir: 'Open_Peripheral') + fileTree(dir: 'Pams-Harvest_Craft') + fileTree(dir: 'PC-Core') + fileTree(dir: 'PC-MineFactory_Reloaded') + fileTree(dir: 'PC-Nether_Ores') + fileTree(dir: 'PC-Power_Converters') + fileTree(dir: 'Project_Bench') + fileTree(dir: 'Project_Red') + fileTree(dir: 'Project_Zulu') + fileTree(dir: 'QuarryPlus') + fileTree(dir: 'Railcraft') + fileTree(dir: 'Random_Things') + fileTree(dir: 'RedLogic') + fileTree(dir: 'Redstone_In_Motion') + fileTree(dir: 'Reika-DyeTrees') + fileTree(dir: 'Reika-EnderForest') + fileTree(dir: 'Reika-ExpandedRedstone') + fileTree(dir: 'Reika-GeoStrata') + fileTree(dir: 'Reika-ReactorCraft') + fileTree(dir: 'Reika-RotaryCraft') + fileTree(dir: 'Reika-UsefulTNT') + fileTree(dir: 'Reliquary') + fileTree(dir: 'RemoteIO') + fileTree(dir: 'Small_Boats') + fileTree(dir: 'SoulShards') + fileTree(dir: 'StevesCarts_2') + fileTree(dir: 'Switches') + fileTree(dir: 'TConstruct') + fileTree(dir: 'Thaumcraft_4') + fileTree(dir: 'Thaumic_Tinkerer') + fileTree(dir: 'TMechworks') + fileTree(dir: 'Transitional_Assistance') + fileTree(dir: 'TrussMod') + fileTree(dir: 'Twilight_Forest') + fileTree(dir: 'UE-Atomic_Science') + fileTree(dir: 'UE-Basic_Components') + fileTree(dir: 'UE-Complex_Machines') + fileTree(dir: 'UE-DarkAssembly_Line') + fileTree(dir: 'UE-Galacticraft') + fileTree(dir: 'UE-ICBM') + fileTree(dir: 'UE-Mekanism') + fileTree(dir: 'UE-MFFS') + fileTree(dir: 'UE-Minechem_4') + fileTree(dir: 'UE-Resonant_Induction') + fileTree(dir: 'Utility_Mobs') + fileTree(dir: 'Waila') + fileTree(dir: 'Witchery') + fileTree(dir: 'XACT')

task zipAll(type: Zip) {
	baseName = 'FYD-1.6.4'
	appendix = '1.2-build'
	classifier = Integer.parseInt(new File('Build_Main.txt').text) + 1
	from all
	exclude '.gradle'
	exclude '.git'
	exclude 'Old_Build_Files'
	exclude '**/*.txt'
	exclude '**/*.lang'
	exclude '**/*.class'
	exclude '**/*.obj'
	exclude '**/*.blend'
	doLast{
		new File('Build_Main.txt').write(classifier + "", 'UTF-8')
		copy{
			from zipAll
			into '../FyD-Releases/1.6.X_Releases'
		}
		new File(zipAll.archiveName).delete()
	}
}

task zipTest(type: Zip) {
	baseName = 'FYD-1.6.4'
	appendix = 'test'
	from all
	exclude '.gradle'
	exclude '.git'
	exclude 'Old_Build_Files'
	exclude '**/*.txt'
	exclude '**/*.lang'
	exclude '**/*.class'
	exclude '**/*.obj'
	exclude '**/*.blend'
}

task zipVanilla(type: Zip) {
	baseName = 'FyD_Vanilla-1.7.X-1.6.X'
	appendix = '1.1-build'
	classifier = Integer.parseInt(new File('Build_Vanilla.txt').text) + 1
	from 'Vanilla_Minecraft'
	exclude '**/*.txt'
	exclude '**/*.lang'
	exclude '**/*.class'
	doLast{
		new File('Build_Vanilla.txt').write(classifier + "", 'UTF-8')
		copy{
			from zipVanilla
			into '../FyD-Releases/Vanilla_Releases'
		}
		new File(zipVanilla.archiveName).delete()
	}
}

task zipPatcher(type: Zip) {
	baseName = 'Vanilla_1.6.X'
	from 'Vanilla_Minecraft'
	exclude '**/*.txt'
	exclude '**/*.lang'
	exclude '**/*.class'
	doLast{
		copy{
			from zipPathcer
			into '../FyD-Patcher'
		}
		new File(zipPatcher.archiveName).delete()
	}
}

// Note this does not work if anyone can fix if please do
// task patcherMods

// rootProject.projectDir.eachFile(FileType.DIRECTORIES) {
	// task "zip${it.name}"(type: Zip) {
		// from it
		// exclude '.gradle'
		// exclude '.git'
		// exclude 'Old_Build_Files'
		// exclude 'Vanilla_Minecraft'
		// exclude '**/*.txt'
		// exclude '**/*.lang'
		// exclude '**/*.class'
		// exclude '**/*.obj'
		// exclude '**/*.blend'
		// doLast{
			// copy{
				// from "zip${it.name}"
				// into '../FyD-Patcher'
			// }
		// }
		// new File("zip${it.name}").delete()
	// }
	// patcherMods.dependsOn "zip${it.name}"
// }