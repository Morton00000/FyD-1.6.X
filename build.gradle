import groovy.io.FileType

// If anyone knows a better way to do this please let me know or fix it for me
FileTree all = fileTree(dir: 'Vanilla_Minecraft') + fileTree(dir: 'MCPatcher-Optifine') + fileTree(dir: 'Advanced_Genetics') + fileTree(dir: 'Applied_Energistics') + fileTree(dir: 'Arcane_Scrolls') + fileTree(dir: 'Archimedes_Ships') + fileTree(dir: 'Aroma_1997_Core') + fileTree(dir: 'ArsMagica_2') + fileTree(dir: 'Artifice') + fileTree(dir: 'Backpack') + fileTree(dir: 'Barrels') + fileTree(dir: 'Battle_Towers') + fileTree(dir: 'BC4') + fileTree(dir: 'BC4-Additional_Objects') + fileTree(dir: 'BC4-Additional_Pipes') + fileTree(dir: 'BC4-Logistics_Pipes') + fileTree(dir: 'BC4-Teleport_Pipes') + fileTree(dir: 'Better_Chests') + fileTree(dir: 'Better_Dungeons') + fileTree(dir: 'Better_Furnaces') + fileTree(dir: 'Better_Grass_And_Leaves_Mod') + fileTree(dir: 'Better_Signs_Mod') + fileTree(dir: 'Better_Storage') + fileTree(dir: 'Biblio_Craft') + fileTree(dir: 'Biblio_Woods-BOP') + fileTree(dir: 'Biblio_Woods-Forestry') + fileTree(dir: 'Biblio_Woods-Highlands') + fileTree(dir: 'Biblio_Woods-Natura') + fileTree(dir: 'Biomes-O-Plenty') + fileTree(dir: 'Blood_Magic') + fileTree(dir: 'Carpenters_Blocks') + fileTree(dir: 'CB-Chicken_Chunks') + fileTree(dir: 'CB-Ender_Storage') + fileTree(dir: 'CB-Translocator') + fileTree(dir: 'CB-WR-CBE') + fileTree(dir: 'Chisel') + fileTree(dir: 'Chococraft') + fileTree(dir: 'CoFH-Core') + fileTree(dir: 'CoFH-Thermal_Expansion') + fileTree(dir: 'Computer_Craft') + fileTree(dir: 'Craft_Heraldry') + fileTree(dir: 'Craftable_Horse_Armor') + fileTree(dir: 'Dart_Craft') + fileTree(dir: 'Den_Pipes') + fileTree(dir: 'Den_Pipes-Emerald') + fileTree(dir: 'Den_Pipes-Forestry') + fileTree(dir: 'Dynamic_Tanks_2') + fileTree(dir: 'Electrodynamics') + fileTree(dir: 'Emasher_Resource') + fileTree(dir: 'Enchanting_Plus') + fileTree(dir: 'Ender_IO') + fileTree(dir: 'Engineers_Toolbox') + fileTree(dir: 'Enhanced_Portals') + fileTree(dir: 'Extra_Cells') + fileTree(dir: 'Extra_TiC') + fileTree(dir: 'Extra_Utils') + fileTree(dir: 'Extrabiomes_XL') + fileTree(dir: 'Factorization') + fileTree(dir: 'Farlanders') + fileTree(dir: 'Flat_Signs') + fileTree(dir: 'Forestry') + fileTree(dir: 'Forestry-Binnie_Mods') + fileTree(dir: 'Forestry-Magic_Bees') + fileTree(dir: 'Forestry-Plug-ins') + fileTree(dir: 'Forge_Multipart') + fileTree(dir: 'Furniture_Mod') + fileTree(dir: 'Ganys_End') + fileTree(dir: 'Ganys_Nether') + fileTree(dir: 'Ganys_Surface') + fileTree(dir: 'Gas_Craft') + fileTree(dir: 'Gate_Copy') + fileTree(dir: 'Gendustry') + fileTree(dir: 'Hardcore_Ender_Expansion') + fileTree(dir: 'Highlands') + fileTree(dir: 'Hopper_Ducts_Mod') + fileTree(dir: 'IC2') + fileTree(dir: 'IC2-Advanced_Machines(immibis)') + fileTree(dir: 'IC2-Advanced_Power_Management') + fileTree(dir: 'IC2-Advanced_Solar_Panels') + fileTree(dir: 'IC2-Charge_Pads') + fileTree(dir: 'IC2-Compact_Solars') + fileTree(dir: 'IC2-Compact_Windmills') + fileTree(dir: 'IC2-Gravi_Suite') + fileTree(dir: 'IC2-GregTech') + fileTree(dir: 'IC2-MFFS')  + fileTree(dir: 'IC2-Nuclear_Control') + fileTree(dir: 'iChun-GravityGun') + fileTree(dir: 'iChun-Hats') + fileTree(dir: 'iChun-Morph') + fileTree(dir: 'iChun-PortalGun') + fileTree(dir: 'iChun-Sync') + fileTree(dir: 'Immibis-Core') + fileTree(dir: 'Immibis-Microblocks') + fileTree(dir: 'Immibis-Peripherals') + fileTree(dir: 'Iron_Chest') + fileTree(dir: 'JABBA') + fileTree(dir: 'Lava_Monsters') + fileTree(dir: 'Legendary_Beasts_Alpha') + fileTree(dir: 'Lycanites-Mobs_Complete') + fileTree(dir: 'Magical_Crops') + fileTree(dir: 'Mariculture') + fileTree(dir: 'Mimicry') + fileTree(dir: 'Misc_Peripherals') + fileTree(dir: 'MPS') + fileTree(dir: 'MPS-Add-ons') + fileTree(dir: 'Mystcraft') + fileTree(dir: 'Natura') + fileTree(dir: 'NEI') + fileTree(dir: 'NEIAddons') + fileTree(dir: 'NEIPlugins') + fileTree(dir: 'Open_Blocks') + fileTree(dir: 'Open_Mods_Lib') + fileTree(dir: 'Open_Peripheral-Add-ons') + fileTree(dir: 'Pams-Harvest_Craft') + fileTree(dir: 'PC-Core') + fileTree(dir: 'PC-MineFactory_Reloaded') + fileTree(dir: 'PC-Nether_Ores') + fileTree(dir: 'PC-Power_Converters') + fileTree(dir: 'Plant_Mega_Pack') + fileTree(dir: 'Project_Bench') + fileTree(dir: 'Project_Red') + fileTree(dir: 'Project_Zulu') + fileTree(dir: 'qCraft') + fileTree(dir: 'Quarry_Plus') + fileTree(dir: 'Railcraft') + fileTree(dir: 'Random_Things') + fileTree(dir: 'RedLogic') + fileTree(dir: 'Redstone_Arsenal') + fileTree(dir: 'Redstone_In_Motion') + fileTree(dir: 'Reika-DragonAPI') + fileTree(dir: 'Reika-DyeTrees') + fileTree(dir: 'Reika-EnderForest') + fileTree(dir: 'Reika-ExpandedRedstone') + fileTree(dir: 'Reika-GeoStrata') + fileTree(dir: 'Reika-MeteorCraft') + fileTree(dir: 'Reika-ReactorCraft') + fileTree(dir: 'Reika-RotaryCraft') + fileTree(dir: 'Reika-SpiderPet') + fileTree(dir: 'Reika-UsefulTNT') + fileTree(dir: 'Reliquary') + fileTree(dir: 'Remote_IO') + fileTree(dir: 'Small_Boats') + fileTree(dir: 'Soul_Shards') + fileTree(dir: 'Special_Mobs') + fileTree(dir: 'Steves_Carts_2') + fileTree(dir: 'Switches') + fileTree(dir: 'TeamMet-Agriculture') + fileTree(dir: 'TeamMet-Aquaculture') + fileTree(dir: 'TeamMet-Metallurgy') + fileTree(dir: 'Thaumcraft_4') + fileTree(dir: 'Thaumic_Tinkerer') + fileTree(dir: 'The_You_Will_Die_Mod') + fileTree(dir: 'Tinkers_Construct') + fileTree(dir: 'Tinkers_Mechworks') + fileTree(dir: 'Transitional_Assistance') + fileTree(dir: 'Truss_Mod') + fileTree(dir: 'Twilight_Forest') + fileTree(dir: 'UE-Atomic_Science') + fileTree(dir: 'UE-Big_Reactors') + fileTree(dir: 'UE-Calclavia_Core') + fileTree(dir: 'UE-Galacticraft') + fileTree(dir: 'UE-ICBM') + fileTree(dir: 'UE-MadScience') + fileTree(dir: 'UE-Mekanism') + fileTree(dir: 'UE-MFFS') + fileTree(dir: 'UE-Resonant_Induction') + fileTree(dir: 'Underground_Biomes') + fileTree(dir: 'Utility_Mobs') + fileTree(dir: 'Witchery') + fileTree(dir: 'XACT')

task zipAllOld(type: Zip) {
	baseName = 'FYD-1.6.4'
	appendix = '1.2-build'
	classifier = Integer.parseInt(new File('Build_Main.txt').text) + 1
	from all
	include '**/*.png'
	include '**/*.PNG'
	include '**/*.mcmeta'
	include '**/*.properties'
	destinationDir = file('../FyD-Releases/1.6.X_Releases')
	doLast{
		new File('Build_Main.txt').write(classifier + "", 'UTF-8')
	}
}

task zipAll(type: Zip) {
	baseName = 'FYD-1.6.4'
	appendix = '1.2-build'
	classifier = Integer.parseInt(new File('Build_Main.txt').text) + 1
	from 'FyD_Test'
	include '**/*.png'
	include '**/*.PNG'
	include '**/*.mcmeta'
	include '**/*.properties'
	destinationDir = file('../FyD-Releases/1.6.X_Releases')
	doLast{
		new File('Build_Main.txt').write(classifier + "", 'UTF-8')
	}
}

task zipTest(type: Zip) {
	baseName = 'FYD-1.6.4'
	appendix = 'Test'
	from 'FyD_Test'
	include '**/*.png'
	include '**/*.PNG'
	include '**/*.mcmeta'
	include '**/*.properties'
}

task zipVanilla(type: Zip) {
	baseName = 'FyD_Vanilla-1.7.X-1.6.X'
	appendix = '1.1-build'
	classifier = Integer.parseInt(new File('Build_Vanilla.txt').text) + 1
	from 'Vanilla_Minecraft'
	include '**/*.png'
	include '**/*.mcmeta'
	destinationDir = file('../FyD-Releases/Vanilla_Releases')
	doLast{
		new File('Build_Vanilla.txt').write(classifier + "", 'UTF-8')
	}
}

task zipPatcher(type: Zip) {
	baseName = 'Vanilla_1.6.X'
	from 'Vanilla_Minecraft'
	include '**/*.png'
	include '**/*.mcmeta'
	destinationDir = file('../FyD-Patcher')
}

task patcherMods

rootProject.projectDir.eachFile(FileType.DIRECTORIES) { dir ->
    if (dir.name.startsWith("."))
        return
	if (dir.name.startsWith("V"))
        return
	if (dir.name.startsWith("FyD"))
        return
    task "zip_${dir.name}"(type: Zip) {
            from dir
			include '**/*.png'
			include '**/*.PNG'
			include '**/*.mcmeta'
			include '**/*.properties'
			baseName = dir.name
			destinationDir = file('../FyD-Patcher/1.6.X_Mods')
	}
	patcherMods.dependsOn "zip_${dir.name}"
}